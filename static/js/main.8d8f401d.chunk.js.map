{"version":3,"sources":["components/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","this","timerID","setInterval","setState","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","defaultProps","App","isClockVisible","clockName","className","type","onClick","toggleClock","bind","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGMA,G,kNACFC,MAAQ,CAAEC,KAAM,IAAIC,M,kEAEC,IAAD,OAClBC,KAAKC,QAAUC,aAAY,WACzB,EAAKC,SAAS,CACZL,KAAM,IAAIC,SAGd,O,yCAGiBK,GACbA,EAAUC,OAASL,KAAKM,MAAMD,MAEhCE,QAAQC,IAAR,mD,6CAKFC,cACET,KAAKC,W,+BAIC,IACAI,EAASL,KAAKM,MAAdD,KAER,OACE,oCACE,0CAEGA,GAEH,2CAEG,IACAL,KAAKH,MAAMC,KAAKY,2B,GArCTC,IAAMC,YAgD1BhB,EAAMiB,aAAe,CACnBR,KAAM,MAGOT,QCWAkB,E,4MA7DbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,M,4DAIXhB,KAAKG,UAAS,SAAAN,GAAK,MAAK,CACtBkB,gBAAiBlB,EAAMkB,qB,+BAIjB,IAAD,SAC+Bf,KAAKH,MAAnCkB,EADD,EACCA,eAAgBC,EADjB,EACiBA,UAExB,OACE,yBAAKC,UAAU,OACb,4BACEC,KAAK,SACLC,QAASnB,KAAKoB,YAAYC,KAAKrB,OAFjC,mBAMA,4BACEkB,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CACZY,gBAAgB,MAJtB,cAUA,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CACZY,gBAAgB,MAJtB,cAUA,6BACA,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKhB,SAAS,CACZa,UAAWM,KAAKC,MACd,GAAAD,KAAKE,SAAuB,OALpC,mBAYCT,GAAkB,kBAAC,EAAD,CAAOV,KAAMW,S,GAxDtBL,IAAMC,WCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8d8f401d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clock extends React.Component {\n    state = { date: new Date() }\n\n    componentDidMount() {\n      this.timerID = setInterval(() => {\n        this.setState({\n          date: new Date(),\n        });\n      },\n      1000);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.name !== this.props.name) {\n        // eslint-disable-next-line\n        console.log(`The Clock was renamed from oldName to newName`);\n      }\n    }\n\n    componentWillUnmount() {\n      clearInterval(\n        this.timerID,\n      );\n    }\n\n    render() {\n      const { name } = this.props;\n\n      return (\n        <>\n          <h1>\n            React clock\n            {name}\n          </h1>\n          <p>\n            Current time:\n            {' '}\n            {this.state.date.toLocaleTimeString()}\n          </p>\n        </>\n      );\n    }\n}\n\nClock.propTypes = {\n  name: PropTypes.number,\n};\n\nClock.defaultProps = {\n  name: null,\n};\n\nexport default Clock;\n","import React from 'react';\nimport './App.scss';\nimport Clock from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: false,\n    clockName: null,\n  }\n\n  toggleClock() {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={this.toggleClock.bind(this)}\n        >\n          Show/Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: true,\n            });\n          }}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              isClockVisible: false,\n            });\n          }}\n        >\n          Hide Clock\n        </button>\n        <br />\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              clockName: Math.floor(\n                Math.random() * (100 - 1) + 1,\n              ),\n            });\n          }}\n        >\n          Set random name\n        </button>\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}